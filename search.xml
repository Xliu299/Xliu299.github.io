<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>图片测试</title>
    <url>/2020/03/06/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h2 id="图片插入测试"><a href="#图片插入测试" class="headerlink" title="图片插入测试"></a>图片插入测试</h2><img src="/2020/03/06/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/1.jpg" class="">

<p>可以看到图片已经成功显示，不管是在首页预览还是文章内部都可以看到。</p>
<a id="more"></a>

<h3 id="过程记录"><a href="#过程记录" class="headerlink" title="过程记录"></a>过程记录</h3><h4 id="如何插入图片"><a href="#如何插入图片" class="headerlink" title="如何插入图片"></a>如何插入图片</h4><p>使用markdown语法在本地插入的图片部署到云端就没用了，网上搜索后感觉靠谱的方法还是挺多的，</p>
<ol>
<li><p>使用markdown语法，在<code>source</code>目录下建<code>image</code>文件夹来放图片，用<code>！[](图片路径)</code>来引用，但是在VSCode中可以预览，部署到Github就不能成功看到，所以还是失败。</p>
</li>
<li><p>使用图床外链，将1中图片路径改为图片链接，就可以成功使用。本质是照片传到别的网站上，得到该图片在该网站上的链接地址。但是这样的话，那个网站倒闭的话，我的图不是就没了？想到这里，万一Github崩了，那我博客不是都没了😂，看来以后有必要把博客转移到云服务器上，不光因为这个，部署在GitHub上，访问速度实在不敢恭维。</p>
</li>
<li><p>使用一个转换插件 <strong><em>hexo-asset-image</em></strong>,但是在插件装完后我尝试后还是失败。</p>
</li>
<li><p>官方推荐方法: <a href="https://hexo.io/zh-cn/docs/asset-folders.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/asset-folders.html</a>首先将 <code>_config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code>,如图第44行。<img src="/2020/03/06/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/2.jpg" class="">然后通过相对路径引用的标签插件(Tag Plugins)，当然必须是<strong>hexo3</strong>以上的版本，之前的版本这个插件是没有内置的，之前的版本应该要自己装这个插件吧。这样，在你通过<code>hexo new [layout] &lt;title&gt;</code>的时候就会创建同名文件夹<code>title</code>,将该博文中需要的图片放置在该文件夹内，然后通过如下方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img example.jpg %&#125;</span><br></pre></td></tr></table></figure>

<p>就可以实现插入图片。缺点是竟然不能在vscode里预览图片？！<br>注：当然还有别的方法，就需要再去发现了。</p>
</li>
</ol>
<h4 id="图片改动"><a href="#图片改动" class="headerlink" title="图片改动"></a>图片改动</h4><p>   只实现图片插入还不够，还需要图片大小、位置方面的一些改动，看这张图 <img src="/2020/03/06/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/1.jpg" class="" width="300" height="150" title="枫林"><br>   显然可以看出大小是不同的，这采用的也是标签插件，语法为和上述4中语法相同。</p>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img example.jpg width height %&#125;</span><br></pre></td></tr></table></figure>

<p>   当然，标签插件(Tag Plugins)的用途可不仅仅知识用来插入图片，官方文档为：<a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/tag-plugins.html</a>，其余更多用途需要时看文档直接使用就好。</p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客总结</title>
    <url>/2020/01/24/Hexo%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<hr>
<h2 id="Error-bad-credentials"><a href="#Error-bad-credentials" class="headerlink" title="Error: bad credentials"></a>Error: bad credentials</h2><a id="more"></a>

<p>目前比较火的博客框架很多，后来都接触了一些后选择了hexo，并且常用到GitHub，就决定把博客部署到GitHub上，截至目前，基本的功能都有完善，总的来说是大获成功了。下面来说说搭建过程中遇到的问题吧。</p>
<p>因为hexo博客的话，目前最火的主题就是next了，开源的，目前已经7代了，免费、简洁、优雅，这是我的直观感受。有了博客总要个性化一下！！<br>于是：首先博客自然是让人看的，那自然就需要评论。我采用的是gitalk，<del>攻略网上铺天盖地</del>。因为一开始使用的是老版的next，内置并没有gitalk，所以就查攻略，各种操作让人头疼眼花。最可怕的问题是：</p>
<h3 id="Error-bad-credentials-1"><a href="#Error-bad-credentials-1" class="headerlink" title="Error: bad credentials"></a><strong><em>Error: bad credentials</em></strong></h3><p>关键还搜不到问题原因是啥，有人说是配置时没有加引号，还有有人说是域名问题，都尝试一下，又是加引号，又是注册域名并解析，然后问题依旧存在！！！后来看next官方文档，突然发现next新版已经内置了gitalk，所以为什么我要那么麻烦？？！立刻升级！！！因为next是开源的，社区有众多大牛在维护的，很多优秀的技术都会运用在其中。查看新版配置文件就能发现很多功能都已经内置了，只需要根据需求打开就行了。发现了新版之后，立马结合官方文档改进设置，一切都那么水到渠成。</p>
<hr>
<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><ol>
<li>网上攻略良莠不齐，还是推荐看官方文档自己摸索，对自己有很大提升。目前新版配置比较优秀的教程，推荐这篇：<a href="https://mp.weixin.qq.com/s/4gduKACM_o0WV6TLgTnwOA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/4gduKACM_o0WV6TLgTnwOA</a>。</li>
<li>多做尝试，多做思考，积累经验，才会提高！</li>
</ol>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>它蓝屏了</title>
    <url>/2020/03/13/%E5%AE%83%E8%93%9D%E5%B1%8F%E4%BA%86/</url>
    <content><![CDATA[<hr>
<p>​  从2018年下，也就是大二上半年入手到现在，也有一年半了，hp的本子，颜值高重量小加上配置中等完全满足日常学习，总的来说还是非常满意的。在这一年多的学习路上，它一直坚守在第一线。直到今天，它终于又一次蓝屏了，但这一次，它再也没自己醒来。</p>
<a id="more"></a>

<p>​  蓝屏后就卡住不动了，回想起来，电脑上就开发工具、聊天软件之类的，也没什么全家桶之类的乱七八糟的软件，果然蓝屏都是莫名的错误。没办法，只能强制关机了。然后启动就发现一直在<strong>自动修复</strong>界面，就开不开机了。网上搜了很多，都没有具体说的，没办法，进入高级选项各类操作都尝试过了，禁用驱动签名也试了，都不行，只好用最麻烦也是最简单的方法-<strong>重装系统</strong>，好在之前的所有数据都在D盘中储存着在，基本不会丢失，因为重装系统默认使用C盘会对其格式化，所以<strong>最好不要把数据存在C盘</strong>里，或是就直接不要动C盘内数据。重装的过程比较简单，就是比较费时。之后就是重新部署各类环境了，就比较轻驾熟路了。用了一个多小时，终于解决了这次较为困难的蓝屏。</p>
<p>​  <strong><em>再好的系统都总会有各种各样的错误，</em></strong></p>
<p>​  <strong><em>所以备份自己的信息数据就尤为重要！</em></strong></p>
<hr>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>Win10</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博文</title>
    <url>/2020/01/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/</url>
    <content><![CDATA[<h3 id="大成功"><a href="#大成功" class="headerlink" title="大成功"></a>大成功</h3><p>还是挺兴奋的，虽然是照着别人的流程做的，但还算是完成了，大成功。慢慢提升，慢慢丰富，加油。<br>偶尔会写一写东西，主要用来记录一些想法和分享一些学习经历。</p>
<a id="more"></a>

<hr>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>新年之始的初尝试,<br>总的来说还算是成功的，<br>以后还会进一步学习及完善，<br>加油</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建hexo博客</title>
    <url>/2020/01/13/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>网上对基于hexo框架实现部署在github上搭建个人主页的教程简直<del>铺天盖地</del>，这篇博文呢是对我自己搭建博客的一个过程记录。使用的是Window10电脑，因为对markdown语法不是很熟悉，故记录稍显粗略，下面是搭建过程，搭建时结合官方文档一同查看<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></p>
<a id="more"></a>

<h4 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h4><p>因为要部署在github上，所以需要注册github账号，注册过程就不再赘述，注册成功进入个人主页后点击右上角加号创建仓库，仓库名必须为：用户名+github.io 例如：你的用户名是：hello,那你的仓库名就应该为:hello.github.io，这个就是你博客的访问地址。</p>
<p>从网站<a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a>下载git，下载安装一路next即可。</p>
<p>因为hexo是基于node.js的，故需要从网站<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a> 上下载，下载长期支持版既LTS版即可。下载后安装，一路next即可。</p>
<p>选择合适的储存位置创建一个文件夹作为博客信息储存文件夹，进入文件夹，鼠标右键选择打开Git Bash Here命令行。</p>
<p>输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>

<p> 查看版本信息，再输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>查看版本信息，以确定安装完成。</p>
<p>因为npm在国外太慢了，调整数据源选择淘宝源，故在命令行中输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>然后使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure>

<p>查看版本信息，出现版本信息既安装完成。</p>
<p>输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<p>进行hexo安装，同样输入 ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<p>查看版本，以确定是否下载完成。</p>
<p>输入命令： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>   初始化博客，会生成一堆文件，各文件作用如下：</p>
<ul>
<li><p><code>node_modules</code>：nodejs的依赖包，各种插件会被安装在里面；</p>
</li>
<li><p><code>scaffolds</code>：页面模板；</p>
</li>
<li><p><code>source</code>：资源，这里面的内容将会按照页面分别，未来也将会呈现在生成的静态页面中；</p>
</li>
<li><p><code>theme</code>：存放主题的文件夹，默认安装 landscape 主题；</p>
</li>
<li><p><code>_config.yml</code>：配置文件，具体内容将会在以后的博文中详细介绍。</p>
</li>
</ul>
<p>输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>运行本地服务器，运行完成会显示地址，通常是在<a href="https://localhost:4000" target="_blank" rel="noopener">https://localhost:4000</a> ，打开浏览器输入该地址就可以查看到你的博客初始的样子，系统会自动生成一篇helloworld博文。</p>
<p><strong>至此，博客算是初步搭建完成，接下来就是部署到远端。</strong></p>
<p>按原方法打开命令行，输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>然后进入 _config.yml 文件进行修改，推荐使用文本编辑器Sublime Text或者Typora打开，拉到最底下deploy，设置如下：(hello为示例用户名，具体请参看自己实际用户名)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;hello&#x2F;hello.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>然后保存设置即可。</p>
<p>然后回到命令行，输入如下命令：（新版本可跳过如下命令)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;yourEmail&quot;</span><br></pre></td></tr></table></figure>

<p>将email address和YourEmail修改成你的用户名和注册邮箱，然后再命令行中输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>等待在<strong>弹窗</strong>中输入你的github用户名和密码进行登录，等待完成后即可用<a href="https://hello.github.io" target="_blank" rel="noopener">https://hello.github.io</a> 查看你的博客。</p>
<p><strong>至此，既成功搭建博客</strong>。</p>
<p><strong>下面介绍博文发布</strong></p>
<p>以前文同样方式打开Git Bash Here命令行，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &#39;你的博客标题&#39;</span><br></pre></td></tr></table></figure>

<p>，（命令行内创建完成会显示文章路径），就会在博客文件夹下source文件夹内_posts里看到你的博文，使用前文提到的文本编辑器打开你刚创建的博文，使用markdown格式编写，编写完成后保存。</p>
<p>返回命令行，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p>生成静态页面文件。</p>
<p>输入 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>启动本地服务器，在<a href="https://localhost:4000" target="_blank" rel="noopener">https://localhost:4000</a> 预览，无问题则回到命令行输入ctrl+c结束本地服务器，输入命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p>回车后在输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p> ，等待几分钟后打开博客地址，成功发布博客。</p>
<p>流程为：</p>
<p><code>hexo n title</code> –&gt; 修改title内容 –&gt; <code>hexo g</code> –&gt; <code>hexo s</code> –&gt;本地预览–&gt; <code>hexo clean</code> –&gt; <code>hexo d</code></p>
<p>各个命令：</p>
<ul>
<li><code>hexo new</code>/<code>hexo n</code>：创建新博文</li>
<li><code>hexo generate</code>/<code>hexo g</code>：在本地生成静态页面文件，并保存到public文件夹下。</li>
<li><code>hexo server</code>/<code>hexo s</code>:启用本地服务器，在<a href="https://localhost:4000" target="_blank" rel="noopener">https://localhost:4000</a> 预览。</li>
<li><code>hexo clean</code>/<code>hexo c</code>：清除本地以前生成的静态页面文件。</li>
<li><code>hexo deploy</code>/<code>hexo d</code>：上传部署到 Github。</li>
</ul>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ol>
<li>因为各个版本不同以及个人电脑差别，搭建过程可能会有些许出入，但大体相同。</li>
<li>不得不说可能需要学习一下markdown，因为你写的东西可能导致莫名其妙的错误。</li>
<li>欢迎大家友好交流，因评论功能还未设置完善，建议请联系：<a href="mailto:2363775632@qq.com">2363775632@qq.com</a></li>
</ol>
<hr>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
